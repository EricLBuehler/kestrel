fn main: std::void {
    program.ke:2
    .0:   declare a['1 .0 => .10]
    .1:   i32 1 -> std::i32['2 .1 => .2]
    .2:   ref .1 -> &std::i32['4 .2 => .4]
    .3:   own .2
    .4:   store a .2 -> std::void['5 .4 => .4]
    program.ke:3
    .5:   declare x['6 .5 => .5]
    .6:   i32 1 -> std::i32['7 .6 => .8]
    .7:   i32 2 -> std::i32['8 .7 => .8]
    .8:   eq .6 .7 -> std::bool['9 .8 => .14]
    program.ke:4
    .9:   declare m['10 .9 => .13]
    .10:  load a -> &std::i32['11 .10 => .11]
    .11:  ref .10 -> &&std::i32['13 .11 => .13]
    .12:  own .11
    .13:  store m .11 -> std::void['14 .13 => .13]  dropbinding m
    program.ke:3
    .14:  ifcondition #0 .8 {
        program.ke:4
        .0:   declare m['10 .9 => .13]
        .1:   load a -> &std::i32['static]
        .2:   ref .10 -> &&std::i32['static]
        .3:   own .11
        .4:   store m .11 -> std::void['static]
    } -> std::void['15 .14 => .16]
    .15:  own .14
    .16:  store x .14 -> std::void['16 .16 => .16]  dropbinding x
    program.ke:6
    .17:  declare y['17 .17 => .21]
    .18:  load a -> &std::i32['18 .18 => .19]  dropbinding a
    .19:  ref .18 -> &&std::i32['20 .19 => .21]
    .20:  own .19
    .21:  store y .19 -> std::void['21 .21 => .21]  dropbinding y

    & ref .2 ['3 .2 => .18]
    && ref .11 ['12 .11 => .13]
    && ref .19 ['19 .19 => .21]
}