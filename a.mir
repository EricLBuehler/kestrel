fn main: std::void {
    program.ke:2
    .0:   declare x['1 .0 => .4]
    .1:   i32 123 -> std::i32['2 .1 => .2]
    .2:   ref .1 -> &std::i32['4 .2 => .4]
    .3:   own .2
    .4:   store x .2 -> std::void['5 .4 => .4]
    program.ke:4
    .5:   i32 1 -> std::i32['6 .5 => .7]
    .6:   i32 1 -> std::i32['7 .6 => .7]
    .7:   eq .5 .6 -> std::bool['8 .7 => .12]
    program.ke:5
    .8:   declare _['9 .8 => .11]
    .9:   i32 1 -> std::i32['10 .9 => .11]
    .10:  own .9
    .11:  store _ .9 -> std::void['11 .11 => .11]  dropbinding _
    program.ke:4
    .12:  ifcondition #0 .7 {
        program.ke:5
        .0:   declare _['9 .8 => .11]
        .1:   i32 1 -> std::i32['static]
        .2:   own .9
        .3:   store _ .9 -> std::void['static]
    } -> std::void['12 .12 => .12]
    program.ke:7
    .13:  declare n['13 .13 => .16]
    .14:  load x -> &std::i32['14 .14 => .16]  dropbinding x
    .15:  own .14
    .16:  store n .14 -> std::void['15 .16 => .16]  dropbinding n

    & ref .2 ['3 .2 => .14]
}